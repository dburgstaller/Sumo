package sumo.login;

import javax.swing.JFrame;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import sumo.Constants.Constants;
import sumo.daos.MitarbeiterDao;
import sumo.mainwindow.Backscreen;
import sumo.mainwindow.MainWindow;
import sumo.model.Mitarbeiter;
import sumo.model.Mitarbeiterstunde;
import sumo.daos.*;
/*
* Ersteller: Patrick Fröschl
* Letzter Bearbeiter: Daniel Burgstaller
* Klassenname: Logout
* Superklasse: JFrame
* Interfaces:
* 				ActionListener,KeyListener
* Funktionen:
*				Konstruktor
*				initComponents
*				actionPerformed
*				logout
*
*/

public class Logout extends JFrame implements ActionListener, KeyListener{
	String username="";
	
	JLabel logout_passwort_label=new JLabel("Passwort:");
	
	JButton logout_ok_button=new JButton("OK");
	JButton logout_break_button=new JButton("Abbrechen");
	
	JPasswordField logout_passwort_passwordfield=new JPasswordField("");
	
	JPanel login_center_panel=new JPanel();
	JPanel login_bottom_panel=new JPanel();
	
	
	public Logout(String username){
		super("Logout: "+username);
		setSize(300,100);
		
		setVisible(true);
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setResizable(false);
		setLayout(new BorderLayout());
		setAlwaysOnTop(true);
		
		initComponents();
		addKeyListener(this);
		setVisible(true);
		this.username=username;
	}//#Konstruktor
	
		/*
	* Ersteller: Fröschl Patrick
	* Funktionname:initComponents
	* Paramterliste: 
	* Funktion:
	*            initizialisiert die Komponenten des Fensters
	*/

	public void initComponents() {
		
		login_center_panel.setLayout(new GridLayout(1, 2));
		login_center_panel.setBackground(Constants.cl_blue);

		logout_passwort_label.setForeground(Color.WHITE);
		login_center_panel.add(logout_passwort_label);
		
		login_center_panel.add(logout_passwort_passwordfield);

		add(login_center_panel, BorderLayout.CENTER);
		
		
		/* BottomPanel */
		login_bottom_panel.setBackground(Constants.cl_blue);
		
		logout_ok_button.addActionListener(this);
		logout_ok_button.addKeyListener(this);
		
		login_bottom_panel.add(logout_ok_button);
		
		logout_break_button.addActionListener(this);
		logout_break_button.addKeyListener(this);
		
		login_bottom_panel.add(logout_break_button);

		add(login_bottom_panel,BorderLayout.SOUTH);
		
	}//#initComponents
	
		/*
	* Ersteller:Fröschl Patrick
	* Funktionname: keyTyped (autoGenerated)
	* Paramterliste: 
	* 			KeyEvent e - Keyeventargument
	* Funktion:
	*            Fängt das die Eingabe von der Tastatur ab, sodass man sich auch mit Enter einloggen kann
	*/

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}//#KeyTyped

	/*
	* Ersteller: Fröschl
	* Funktionname: keyPressed (autoGenerated)
	* Paramterliste: 
	* 			KeyEvent e - Keyeventargument
	* Funktion:
	*            Fängt das die Eingabe von der Tastatur ab, sodass man sich auch mit Enter einloggen kann
	*/
	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}//#KeyPressed

	/*
	* Ersteller: Fröschl
	* Funktionname: keyReleased (autoGenerated)
	* Paramterliste: 
	* 			KeyEvent e - Keyeventargument
	* Funktion:
	*            Fängt das die Eingabe von der Tastatur ab, sodass man sich auch mit Enter einloggen kann
	*/
	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}//#keyReleased
		/*
	* Ersteller: Fröschl
	* Funktionname: actionPerformed (autoGenerated)
	* Paramterliste: 
	* 			ActionEvent e - Actioneventargument
	* Funktion:
	*            Fängt alle Ereignisse ab
	*/

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		String cmd=e.getActionCommand();
		if(cmd.equals("Abbrechen")){
			this.dispose();
		}else{		//OK
			
			logout();
			
		}//#if
	}//#actionPerformed
	
		/*
	* Ersteller: Burgstaller
	* Funktionname: logout
	* Paramterliste: 
	* 			
	* Funktion:
	*            loggt den User aus und beendet somit die Arbietszeit
	*/
	public void logout(){
		String passwort=logout_passwort_passwordfield.getText();
		MitarbeiterDao dao=new MitarbeiterDao();
		Mitarbeiter mb=dao.getMitarbeiterByUsername(username);
		
		if (mb.getPasswort().equals(passwort)){
			editMitarbeiterstunde(mb);
			
			this.dispose();
			Login.mw.dispose();
			Login l=new Login();
		}else{
			JOptionPane.showMessageDialog(this, "Falsches Passwort!");
		}
	}//#logout

		/**
		 * 
		 */
		private void editMitarbeiterstunde(Mitarbeiter mb) {
			Date actual=new Date();
			
			Timestamp ts=new Timestamp(actual.getTime());
			MitarbeiterstundenDao dao=new MitarbeiterstundenDao();
			
			List<Mitarbeiterstunde> stunden=dao.getMitarbeiterstundenByMitarbeiter(mb); //€NDERN
			System.out.println("ich bin noch hier: stunden hat "+stunden.size());
			for(Mitarbeiterstunde m:stunden){
				Timestamp stamp=m.getAngekommen();
				Date datum=new Date(stamp.getTime());
				System.out.println(datum.toString());
				Date aktuelles=new Date();
				if (datum.getYear() == aktuelles.getYear() && datum.getMonth()==aktuelles.getMonth() && datum.getDay()==aktuelles.getDay()){
					m.setGegangen(new Timestamp(aktuelles.getTime()));
					
					dao.saveOrUpdate(m);
					return;
				}
			}
		
			
			
		}
}//#Logout













